name: CI/CD - Lint, Test, Docker-Publish Github Packages

on:
  release:
    types: [published]
  push:
    branches: [main, develop]
    tags: [v*]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

#TODO run tests in built container

env:
  IMAGE_NAME: siddata_server
jobs:
  test_lint: #see https://docs.github.com/en/actions/guides/building-and-testing-python
    runs-on: ${{ matrix.os }}
    name: CI - Lint, Pytest, Codecov
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.8, 3.9]
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v2 # repo now available under $GITHUB_WORKSPACE
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          if [ -f requirements-test.txt ]; then pip install -r requirements-test.txt; else pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings.
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
      - name: Lint with black
        uses: psf/black@21.5b2
        with:
          args: ". --check"
      - name: Test with pytest
        run: |
          pytest -vv

  push_to_registry:
    name: Push Docker image to GitHub Packages
    if: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || github.event.inputs.create_container == 'true' }}
    needs: test_lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Requirements with Machine User's Personal Access Token
        env:
          MACHINE_USER_PERSONALACCESSTOKEN: ${{ secrets.MACHINE_USER_PERSONALACCESSTOKEN }}
        run: |
          python .github/workflows/rewrite_requirements.py

      #https://github.com/docker/build-push-action#usage
      #https://github.com/docker/build-push-action/blob/master/docs/advanced/tags-labels.md
      - name: Docker meta
        id: meta
        uses: crazy-max/ghaction-docker-meta@v2
        with:
          images: ghcr.io/visiolab/data-processing
          tags: |
            type=ref,event=branch
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.MACHINE_USER_PERSONALACCESSTOKEN }}
      - name: Build and push with tag
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}


#      - name: Push to GitHub Packages
#        uses: docker/build-push-action@v1
#        with:
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#          registry: docker.pkg.github.com
#          repository: visiolab/data-processing/etl_pipeline
#          tag_with_ref: true #If pushed from develop, the name is `etl_pipeline:develop`, else `etl_pipeline:latest`
